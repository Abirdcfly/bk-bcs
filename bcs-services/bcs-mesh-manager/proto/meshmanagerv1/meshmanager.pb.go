// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/meshmanagerv1/meshmanager.proto

package meshmanagerv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ErrCode error code
type ErrCode int32

const (
	ErrCode_ERROR_NO ErrCode = 0
	// 0 Sunccess
	ErrCode_ERROR_OK ErrCode = 100
	// 404 Not Found
	ErrCode_ERROR_NOT_FOUND ErrCode = 404
	// 91000 mesh cluster failed
	ErrCode_ERROR_MESH_CLUSTER_FAILED ErrCode = 91000
	//91001 MeshCluster already exist
	ErrCode_ERROR_MESH_CLUSTER_EXIST ErrCode = 91001
)

var ErrCode_name = map[int32]string{
	0:     "ERROR_NO",
	100:   "ERROR_OK",
	404:   "ERROR_NOT_FOUND",
	91000: "ERROR_MESH_CLUSTER_FAILED",
	91001: "ERROR_MESH_CLUSTER_EXIST",
}

var ErrCode_value = map[string]int32{
	"ERROR_NO":                  0,
	"ERROR_OK":                  100,
	"ERROR_NOT_FOUND":           404,
	"ERROR_MESH_CLUSTER_FAILED": 91000,
	"ERROR_MESH_CLUSTER_EXIST":  91001,
}

func (x ErrCode) String() string {
	return proto.EnumName(ErrCode_name, int32(x))
}

func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_97a41eab4f891fa3, []int{0}
}

type CreateMeshClusterReq struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Clusterid            string   `protobuf:"bytes,2,opt,name=clusterid,proto3" json:"clusterid,omitempty"`
	Meshtype             string   `protobuf:"bytes,3,opt,name=meshtype,proto3" json:"meshtype,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string   `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Proxy                *Proxy   `protobuf:"bytes,6,opt,name=proxy,proto3" json:"proxy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMeshClusterReq) Reset()         { *m = CreateMeshClusterReq{} }
func (m *CreateMeshClusterReq) String() string { return proto.CompactTextString(m) }
func (*CreateMeshClusterReq) ProtoMessage()    {}
func (*CreateMeshClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a41eab4f891fa3, []int{0}
}

func (m *CreateMeshClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMeshClusterReq.Unmarshal(m, b)
}
func (m *CreateMeshClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMeshClusterReq.Marshal(b, m, deterministic)
}
func (m *CreateMeshClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMeshClusterReq.Merge(m, src)
}
func (m *CreateMeshClusterReq) XXX_Size() int {
	return xxx_messageInfo_CreateMeshClusterReq.Size(m)
}
func (m *CreateMeshClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMeshClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMeshClusterReq proto.InternalMessageInfo

func (m *CreateMeshClusterReq) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *CreateMeshClusterReq) GetClusterid() string {
	if m != nil {
		return m.Clusterid
	}
	return ""
}

func (m *CreateMeshClusterReq) GetMeshtype() string {
	if m != nil {
		return m.Meshtype
	}
	return ""
}

func (m *CreateMeshClusterReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateMeshClusterReq) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreateMeshClusterReq) GetProxy() *Proxy {
	if m != nil {
		return m.Proxy
	}
	return nil
}

type Limit struct {
	Cpu                  string   `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory               string   `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Limit) Reset()         { *m = Limit{} }
func (m *Limit) String() string { return proto.CompactTextString(m) }
func (*Limit) ProtoMessage()    {}
func (*Limit) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a41eab4f891fa3, []int{1}
}

func (m *Limit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Limit.Unmarshal(m, b)
}
func (m *Limit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Limit.Marshal(b, m, deterministic)
}
func (m *Limit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Limit.Merge(m, src)
}
func (m *Limit) XXX_Size() int {
	return xxx_messageInfo_Limit.Size(m)
}
func (m *Limit) XXX_DiscardUnknown() {
	xxx_messageInfo_Limit.DiscardUnknown(m)
}

var xxx_messageInfo_Limit proto.InternalMessageInfo

func (m *Limit) GetCpu() string {
	if m != nil {
		return m.Cpu
	}
	return ""
}

func (m *Limit) GetMemory() string {
	if m != nil {
		return m.Memory
	}
	return ""
}

type Request struct {
	Cpu                  string   `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory               string   `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a41eab4f891fa3, []int{2}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetCpu() string {
	if m != nil {
		return m.Cpu
	}
	return ""
}

func (m *Request) GetMemory() string {
	if m != nil {
		return m.Memory
	}
	return ""
}

type Resource struct {
	Limits               *Limit   `protobuf:"bytes,1,opt,name=limits,proto3" json:"limits,omitempty"`
	Requests             *Request `protobuf:"bytes,2,opt,name=requests,proto3" json:"requests,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a41eab4f891fa3, []int{3}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetLimits() *Limit {
	if m != nil {
		return m.Limits
	}
	return nil
}

func (m *Resource) GetRequests() *Request {
	if m != nil {
		return m.Requests
	}
	return nil
}

type Proxy struct {
	Resources            *Resource `protobuf:"bytes,1,opt,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Proxy) Reset()         { *m = Proxy{} }
func (m *Proxy) String() string { return proto.CompactTextString(m) }
func (*Proxy) ProtoMessage()    {}
func (*Proxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a41eab4f891fa3, []int{4}
}

func (m *Proxy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proxy.Unmarshal(m, b)
}
func (m *Proxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proxy.Marshal(b, m, deterministic)
}
func (m *Proxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proxy.Merge(m, src)
}
func (m *Proxy) XXX_Size() int {
	return xxx_messageInfo_Proxy.Size(m)
}
func (m *Proxy) XXX_DiscardUnknown() {
	xxx_messageInfo_Proxy.DiscardUnknown(m)
}

var xxx_messageInfo_Proxy proto.InternalMessageInfo

func (m *Proxy) GetResources() *Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

type CreateMeshClusterResp struct {
	Seq                  uint64   `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	ErrCode              ErrCode  `protobuf:"varint,2,opt,name=errCode,proto3,enum=meshmanagerv1.ErrCode" json:"errCode,omitempty"`
	ErrMsg               string   `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMeshClusterResp) Reset()         { *m = CreateMeshClusterResp{} }
func (m *CreateMeshClusterResp) String() string { return proto.CompactTextString(m) }
func (*CreateMeshClusterResp) ProtoMessage()    {}
func (*CreateMeshClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a41eab4f891fa3, []int{5}
}

func (m *CreateMeshClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMeshClusterResp.Unmarshal(m, b)
}
func (m *CreateMeshClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMeshClusterResp.Marshal(b, m, deterministic)
}
func (m *CreateMeshClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMeshClusterResp.Merge(m, src)
}
func (m *CreateMeshClusterResp) XXX_Size() int {
	return xxx_messageInfo_CreateMeshClusterResp.Size(m)
}
func (m *CreateMeshClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMeshClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMeshClusterResp proto.InternalMessageInfo

func (m *CreateMeshClusterResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *CreateMeshClusterResp) GetErrCode() ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return ErrCode_ERROR_NO
}

func (m *CreateMeshClusterResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type DeleteMeshClusterReq struct {
	Clusterid            string   `protobuf:"bytes,2,opt,name=clusterid,proto3" json:"clusterid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMeshClusterReq) Reset()         { *m = DeleteMeshClusterReq{} }
func (m *DeleteMeshClusterReq) String() string { return proto.CompactTextString(m) }
func (*DeleteMeshClusterReq) ProtoMessage()    {}
func (*DeleteMeshClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a41eab4f891fa3, []int{6}
}

func (m *DeleteMeshClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMeshClusterReq.Unmarshal(m, b)
}
func (m *DeleteMeshClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMeshClusterReq.Marshal(b, m, deterministic)
}
func (m *DeleteMeshClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMeshClusterReq.Merge(m, src)
}
func (m *DeleteMeshClusterReq) XXX_Size() int {
	return xxx_messageInfo_DeleteMeshClusterReq.Size(m)
}
func (m *DeleteMeshClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMeshClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMeshClusterReq proto.InternalMessageInfo

func (m *DeleteMeshClusterReq) GetClusterid() string {
	if m != nil {
		return m.Clusterid
	}
	return ""
}

type DeleteMeshClusterResp struct {
	Seq                  uint64   `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	ErrCode              ErrCode  `protobuf:"varint,2,opt,name=errCode,proto3,enum=meshmanagerv1.ErrCode" json:"errCode,omitempty"`
	ErrMsg               string   `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMeshClusterResp) Reset()         { *m = DeleteMeshClusterResp{} }
func (m *DeleteMeshClusterResp) String() string { return proto.CompactTextString(m) }
func (*DeleteMeshClusterResp) ProtoMessage()    {}
func (*DeleteMeshClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a41eab4f891fa3, []int{7}
}

func (m *DeleteMeshClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMeshClusterResp.Unmarshal(m, b)
}
func (m *DeleteMeshClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMeshClusterResp.Marshal(b, m, deterministic)
}
func (m *DeleteMeshClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMeshClusterResp.Merge(m, src)
}
func (m *DeleteMeshClusterResp) XXX_Size() int {
	return xxx_messageInfo_DeleteMeshClusterResp.Size(m)
}
func (m *DeleteMeshClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMeshClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMeshClusterResp proto.InternalMessageInfo

func (m *DeleteMeshClusterResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DeleteMeshClusterResp) GetErrCode() ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return ErrCode_ERROR_NO
}

func (m *DeleteMeshClusterResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type ListMeshClusterReq struct {
	Clusterid            string   `protobuf:"bytes,2,opt,name=clusterid,proto3" json:"clusterid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMeshClusterReq) Reset()         { *m = ListMeshClusterReq{} }
func (m *ListMeshClusterReq) String() string { return proto.CompactTextString(m) }
func (*ListMeshClusterReq) ProtoMessage()    {}
func (*ListMeshClusterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a41eab4f891fa3, []int{8}
}

func (m *ListMeshClusterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMeshClusterReq.Unmarshal(m, b)
}
func (m *ListMeshClusterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMeshClusterReq.Marshal(b, m, deterministic)
}
func (m *ListMeshClusterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMeshClusterReq.Merge(m, src)
}
func (m *ListMeshClusterReq) XXX_Size() int {
	return xxx_messageInfo_ListMeshClusterReq.Size(m)
}
func (m *ListMeshClusterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMeshClusterReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListMeshClusterReq proto.InternalMessageInfo

func (m *ListMeshClusterReq) GetClusterid() string {
	if m != nil {
		return m.Clusterid
	}
	return ""
}

type MeshCluster struct {
	Version              string                    `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Clusterid            string                    `protobuf:"bytes,2,opt,name=clusterid,proto3" json:"clusterid,omitempty"`
	Deletion             bool                      `protobuf:"varint,3,opt,name=deletion,proto3" json:"deletion,omitempty"`
	Components           map[string]*InstallStatus `protobuf:"bytes,4,rep,name=components,proto3" json:"components,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MeshCluster) Reset()         { *m = MeshCluster{} }
func (m *MeshCluster) String() string { return proto.CompactTextString(m) }
func (*MeshCluster) ProtoMessage()    {}
func (*MeshCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a41eab4f891fa3, []int{9}
}

func (m *MeshCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeshCluster.Unmarshal(m, b)
}
func (m *MeshCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeshCluster.Marshal(b, m, deterministic)
}
func (m *MeshCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeshCluster.Merge(m, src)
}
func (m *MeshCluster) XXX_Size() int {
	return xxx_messageInfo_MeshCluster.Size(m)
}
func (m *MeshCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_MeshCluster.DiscardUnknown(m)
}

var xxx_messageInfo_MeshCluster proto.InternalMessageInfo

func (m *MeshCluster) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *MeshCluster) GetClusterid() string {
	if m != nil {
		return m.Clusterid
	}
	return ""
}

func (m *MeshCluster) GetDeletion() bool {
	if m != nil {
		return m.Deletion
	}
	return false
}

func (m *MeshCluster) GetComponents() map[string]*InstallStatus {
	if m != nil {
		return m.Components
	}
	return nil
}

type InstallStatus struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Status               string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstallStatus) Reset()         { *m = InstallStatus{} }
func (m *InstallStatus) String() string { return proto.CompactTextString(m) }
func (*InstallStatus) ProtoMessage()    {}
func (*InstallStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a41eab4f891fa3, []int{10}
}

func (m *InstallStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallStatus.Unmarshal(m, b)
}
func (m *InstallStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallStatus.Marshal(b, m, deterministic)
}
func (m *InstallStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallStatus.Merge(m, src)
}
func (m *InstallStatus) XXX_Size() int {
	return xxx_messageInfo_InstallStatus.Size(m)
}
func (m *InstallStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallStatus.DiscardUnknown(m)
}

var xxx_messageInfo_InstallStatus proto.InternalMessageInfo

func (m *InstallStatus) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InstallStatus) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *InstallStatus) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *InstallStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ListMeshClusterResp struct {
	Seq                  uint64         `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	ErrCode              ErrCode        `protobuf:"varint,2,opt,name=errCode,proto3,enum=meshmanagerv1.ErrCode" json:"errCode,omitempty"`
	ErrMsg               string         `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	MeshClusters         []*MeshCluster `protobuf:"bytes,4,rep,name=meshClusters,proto3" json:"meshClusters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListMeshClusterResp) Reset()         { *m = ListMeshClusterResp{} }
func (m *ListMeshClusterResp) String() string { return proto.CompactTextString(m) }
func (*ListMeshClusterResp) ProtoMessage()    {}
func (*ListMeshClusterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_97a41eab4f891fa3, []int{11}
}

func (m *ListMeshClusterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMeshClusterResp.Unmarshal(m, b)
}
func (m *ListMeshClusterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMeshClusterResp.Marshal(b, m, deterministic)
}
func (m *ListMeshClusterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMeshClusterResp.Merge(m, src)
}
func (m *ListMeshClusterResp) XXX_Size() int {
	return xxx_messageInfo_ListMeshClusterResp.Size(m)
}
func (m *ListMeshClusterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMeshClusterResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListMeshClusterResp proto.InternalMessageInfo

func (m *ListMeshClusterResp) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *ListMeshClusterResp) GetErrCode() ErrCode {
	if m != nil {
		return m.ErrCode
	}
	return ErrCode_ERROR_NO
}

func (m *ListMeshClusterResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *ListMeshClusterResp) GetMeshClusters() []*MeshCluster {
	if m != nil {
		return m.MeshClusters
	}
	return nil
}

func init() {
	proto.RegisterEnum("meshmanagerv1.ErrCode", ErrCode_name, ErrCode_value)
	proto.RegisterType((*CreateMeshClusterReq)(nil), "meshmanagerv1.CreateMeshClusterReq")
	proto.RegisterType((*Limit)(nil), "meshmanagerv1.Limit")
	proto.RegisterType((*Request)(nil), "meshmanagerv1.Request")
	proto.RegisterType((*Resource)(nil), "meshmanagerv1.Resource")
	proto.RegisterType((*Proxy)(nil), "meshmanagerv1.Proxy")
	proto.RegisterType((*CreateMeshClusterResp)(nil), "meshmanagerv1.CreateMeshClusterResp")
	proto.RegisterType((*DeleteMeshClusterReq)(nil), "meshmanagerv1.DeleteMeshClusterReq")
	proto.RegisterType((*DeleteMeshClusterResp)(nil), "meshmanagerv1.DeleteMeshClusterResp")
	proto.RegisterType((*ListMeshClusterReq)(nil), "meshmanagerv1.ListMeshClusterReq")
	proto.RegisterType((*MeshCluster)(nil), "meshmanagerv1.MeshCluster")
	proto.RegisterMapType((map[string]*InstallStatus)(nil), "meshmanagerv1.MeshCluster.ComponentsEntry")
	proto.RegisterType((*InstallStatus)(nil), "meshmanagerv1.InstallStatus")
	proto.RegisterType((*ListMeshClusterResp)(nil), "meshmanagerv1.ListMeshClusterResp")
}

func init() {
	proto.RegisterFile("proto/meshmanagerv1/meshmanager.proto", fileDescriptor_97a41eab4f891fa3)
}

var fileDescriptor_97a41eab4f891fa3 = []byte{
	// 1202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0xcd, 0x6f, 0x1b, 0x45,
	0x14, 0x67, 0xe3, 0xd8, 0x71, 0x5f, 0xda, 0xc6, 0x99, 0xa4, 0xa9, 0x63, 0x02, 0x71, 0xb6, 0x20,
	0x45, 0x4b, 0x62, 0x27, 0x1b, 0x0a, 0x95, 0x51, 0x91, 0xd6, 0x8e, 0x0b, 0x09, 0x4e, 0x52, 0x8d,
	0x53, 0x09, 0x01, 0x92, 0xb5, 0x38, 0x83, 0x63, 0x62, 0xef, 0x6e, 0x76, 0xd6, 0x01, 0xab, 0x54,
	0x2a, 0x3d, 0xa0, 0x26, 0x22, 0x20, 0x2d, 0x15, 0x52, 0x95, 0xa8, 0x02, 0x54, 0x55, 0xe2, 0xc2,
	0x91, 0xa2, 0x50, 0x51, 0x89, 0x43, 0xff, 0x80, 0xf4, 0xcc, 0xad, 0x4e, 0xda, 0x13, 0x57, 0x10,
	0x17, 0xb4, 0x5f, 0x5e, 0xdb, 0xeb, 0x24, 0x80, 0x38, 0xf4, 0xb2, 0xf3, 0xde, 0xbc, 0xdf, 0x9b,
	0x79, 0x1f, 0x33, 0xef, 0xcd, 0xc2, 0x8b, 0x8a, 0x2a, 0x6b, 0x72, 0xbc, 0x4c, 0xe8, 0x72, 0x59,
	0x94, 0xc4, 0x02, 0x51, 0xd7, 0x26, 0x1b, 0xb9, 0x98, 0x29, 0x47, 0x27, 0x9a, 0x00, 0x91, 0xa1,
	0x82, 0x2c, 0x17, 0x4a, 0x24, 0x2e, 0x2a, 0xc5, 0xb8, 0x28, 0x49, 0xb2, 0x26, 0x6a, 0x45, 0x59,
	0xa2, 0x16, 0x38, 0x32, 0x66, 0x0e, 0xf9, 0xf1, 0x02, 0x91, 0xc6, 0xe9, 0x47, 0x62, 0xa1, 0x40,
	0xd4, 0xb8, 0xac, 0x98, 0x08, 0x2f, 0x9a, 0xfd, 0xcb, 0x07, 0xfd, 0x29, 0x95, 0x88, 0x1a, 0x99,
	0x23, 0x74, 0x39, 0x55, 0xaa, 0x50, 0x8d, 0xa8, 0x98, 0xac, 0xa2, 0x38, 0x74, 0xad, 0x11, 0x95,
	0x16, 0x65, 0x29, 0xcc, 0x44, 0x99, 0xd1, 0x63, 0xc9, 0x53, 0xba, 0x80, 0x38, 0x67, 0x8e, 0x77,
	0x08, 0xec, 0x10, 0xe8, 0x55, 0x38, 0x96, 0xb7, 0xd4, 0x8b, 0x4b, 0xe1, 0x0e, 0x53, 0x65, 0x50,
	0x17, 0x06, 0x38, 0x77, 0x96, 0x77, 0x49, 0xec, 0x92, 0x68, 0x0a, 0x82, 0x86, 0x7f, 0x5a, 0x55,
	0x21, 0x61, 0x9f, 0xa9, 0x77, 0x5a, 0x17, 0xfa, 0xb9, 0xfa, 0x24, 0x5f, 0xa7, 0x70, 0x9d, 0x42,
	0x67, 0xa0, 0x53, 0x12, 0xcb, 0x24, 0xdc, 0x69, 0x2a, 0xf4, 0xe8, 0xc2, 0x71, 0xce, 0x9c, 0xe0,
	0xcd, 0x2f, 0x36, 0xbf, 0x86, 0x49, 0xc6, 0x48, 0x15, 0x31, 0x4f, 0xc2, 0xfe, 0x06, 0x93, 0xea,
	0xb3, 0xbc, 0x4b, 0x62, 0x97, 0x44, 0xe7, 0xc1, 0xaf, 0xa8, 0xf2, 0xc7, 0xd5, 0x70, 0x20, 0xca,
	0x8c, 0x76, 0xf3, 0xfd, 0xb1, 0xa6, 0x04, 0xc4, 0x2e, 0x1a, 0xb2, 0x64, 0xaf, 0x2e, 0x9c, 0xe4,
	0x2c, 0x1c, 0x6f, 0x0d, 0xd8, 0x1a, 0x12, 0x77, 0x18, 0x5d, 0xf8, 0x8e, 0x01, 0xcc, 0xb5, 0x0d,
	0x2d, 0x3f, 0x58, 0xbb, 0xbe, 0x55, 0xfb, 0x79, 0x67, 0xe5, 0x1c, 0x7d, 0xb2, 0xf5, 0xd9, 0xfe,
	0x2f, 0xb7, 0x8d, 0xc5, 0xf7, 0xb6, 0x37, 0x6b, 0x1b, 0xdf, 0xee, 0x32, 0x4e, 0x38, 0x77, 0x19,
	0x37, 0x42, 0xbb, 0x8c, 0x1b, 0x8b, 0x0c, 0x9a, 0xbd, 0x1c, 0x65, 0x6d, 0x10, 0x9b, 0x88, 0xb2,
	0x93, 0xb1, 0xb3, 0xb1, 0x97, 0xd9, 0xb1, 0x28, 0x5b, 0x87, 0x1b, 0xb3, 0xc9, 0x54, 0x76, 0x7c,
	0x2e, 0x9d, 0x5d, 0xc8, 0x8e, 0x4f, 0x4e, 0x4c, 0x4c, 0xf1, 0x86, 0xdc, 0x59, 0xc2, 0x10, 0x17,
	0xa9, 0x56, 0x94, 0xd9, 0x2b, 0xec, 0x24, 0xf8, 0x33, 0xc5, 0x72, 0x51, 0x43, 0x21, 0xf0, 0xe5,
	0x95, 0x8a, 0x95, 0x69, 0x6c, 0x90, 0x68, 0x00, 0x02, 0x65, 0x52, 0x96, 0xd5, 0xaa, 0x95, 0x4b,
	0x6c, 0x73, 0xec, 0x14, 0x74, 0x61, 0xb2, 0x5a, 0x21, 0xf4, 0xdf, 0x28, 0x95, 0x20, 0x88, 0x09,
	0x95, 0x2b, 0x6a, 0x9e, 0xa0, 0x31, 0x08, 0x94, 0x8c, 0x3d, 0xa9, 0xa9, 0xe8, 0x0d, 0xae, 0x69,
	0x10, 0xb6, 0x31, 0x88, 0x87, 0xa0, 0x6a, 0x6d, 0x47, 0xcd, 0x35, 0xbb, 0xf9, 0x81, 0x16, 0xbc,
	0x6d, 0x0d, 0xae, 0xe3, 0xd8, 0xd7, 0xc1, 0x6f, 0x66, 0x08, 0x9d, 0x85, 0x63, 0xaa, 0xbd, 0xad,
	0xb3, 0xdb, 0x69, 0x8f, 0xb6, 0x25, 0xc7, 0x2e, 0x92, 0xfd, 0x81, 0x81, 0x53, 0x6d, 0x12, 0x47,
	0x15, 0x34, 0x0c, 0x3e, 0x4a, 0x56, 0xcd, 0xa5, 0x3a, 0x93, 0x27, 0x74, 0x01, 0x38, 0x83, 0xe7,
	0x8d, 0x0f, 0x36, 0x3e, 0xe8, 0x0d, 0xe8, 0x22, 0xaa, 0x9a, 0x92, 0x97, 0x88, 0x69, 0xed, 0x49,
	0x8f, 0xb5, 0x69, 0x4b, 0x6a, 0xdf, 0x26, 0x1b, 0xcb, 0x3b, 0x04, 0x76, 0x08, 0xf4, 0x12, 0x04,
	0x88, 0xaa, 0xce, 0xd1, 0x82, 0x7d, 0x25, 0xfa, 0x74, 0x21, 0xc4, 0xd9, 0x53, 0xbc, 0x3d, 0x62,
	0x7b, 0x64, 0xef, 0x32, 0xd0, 0x3f, 0x4d, 0x4a, 0xc4, 0x73, 0x89, 0xff, 0xeb, 0x9d, 0x4c, 0x7c,
	0xa0, 0x0b, 0x79, 0x38, 0xcf, 0xb5, 0x5d, 0xd5, 0x38, 0xbf, 0xdf, 0x3c, 0xb9, 0x79, 0xbb, 0xed,
	0xf9, 0x6d, 0x58, 0x99, 0x45, 0xd1, 0xcb, 0x87, 0x9f, 0xca, 0x2b, 0x66, 0xa8, 0xdb, 0xec, 0xf1,
	0xf4, 0x86, 0xfa, 0x37, 0x06, 0x50, 0xa6, 0x48, 0xb5, 0xff, 0x2b, 0xd0, 0x9b, 0x8c, 0x2e, 0xac,
	0x33, 0x90, 0xe7, 0xfa, 0x5a, 0x56, 0x35, 0x23, 0x9d, 0x79, 0xfc, 0xc5, 0xdd, 0xda, 0x97, 0x5f,
	0xb7, 0x89, 0xf4, 0xfe, 0xc6, 0x8f, 0x7b, 0x57, 0x3f, 0xfd, 0xfd, 0xde, 0xe7, 0xb5, 0x3b, 0xd7,
	0xf6, 0x6e, 0x6d, 0xd7, 0x17, 0x7c, 0xf4, 0xd3, 0xce, 0xfe, 0xf7, 0x3b, 0xb5, 0xeb, 0x37, 0x1f,
	0xdf, 0xbf, 0x51, 0xdb, 0xba, 0xb5, 0xb7, 0x7e, 0x75, 0x6f, 0x7b, 0xdd, 0x52, 0xfe, 0x47, 0x09,
	0xd9, 0xe8, 0x80, 0xee, 0x06, 0x2b, 0x50, 0xb8, 0xa5, 0x0d, 0xb8, 0xf5, 0x7e, 0xc8, 0xe3, 0x72,
	0x63, 0x51, 0x8f, 0x40, 0x70, 0xc9, 0xc8, 0xab, 0xa1, 0x68, 0x84, 0x35, 0x88, 0xeb, 0x3c, 0x9a,
	0x05, 0xc8, 0xcb, 0x65, 0x45, 0x96, 0x88, 0xa4, 0xd1, 0x70, 0x67, 0xd4, 0x37, 0xda, 0xcd, 0x73,
	0x2d, 0xc9, 0x6b, 0xb0, 0x21, 0x96, 0xaa, 0x83, 0xd3, 0x92, 0xa6, 0x56, 0x71, 0x83, 0x76, 0xe4,
	0x5d, 0xe8, 0x69, 0x11, 0x1b, 0x65, 0x69, 0x85, 0x54, 0x9d, 0xb2, 0xb4, 0x42, 0xaa, 0x88, 0x07,
	0xff, 0x9a, 0x58, 0xaa, 0x10, 0xbb, 0x82, 0x0c, 0xb5, 0xec, 0x35, 0x23, 0x51, 0x4d, 0x2c, 0x95,
	0xb2, 0x9a, 0xa8, 0x55, 0x28, 0xb6, 0xa0, 0x89, 0x8e, 0x73, 0x0c, 0x4b, 0xe1, 0x44, 0x93, 0x0c,
	0x21, 0xbb, 0xeb, 0x58, 0x6b, 0x5b, 0x4d, 0x66, 0xa8, 0xb1, 0xc9, 0xd8, 0x71, 0x70, 0x3b, 0xc9,
	0x00, 0x04, 0xa8, 0xa9, 0x6b, 0x1d, 0x2e, 0x6c, 0x73, 0x46, 0x5c, 0xcb, 0x84, 0x52, 0xb1, 0x60,
	0xb7, 0x30, 0xec, 0xb0, 0xec, 0x66, 0x07, 0xf4, 0x79, 0x4e, 0xd8, 0x53, 0x7b, 0x21, 0x50, 0x0e,
	0x8e, 0x97, 0x5d, 0x4b, 0x9d, 0x74, 0x46, 0x0e, 0x4e, 0x67, 0x72, 0x58, 0x17, 0x86, 0xb8, 0x26,
	0x25, 0xbe, 0x89, 0xc3, 0x4d, 0x1c, 0xf7, 0x09, 0x74, 0xd9, 0x86, 0xa3, 0xe3, 0x10, 0x4c, 0x63,
	0xbc, 0x80, 0x73, 0xf3, 0x0b, 0xa1, 0x67, 0x5c, 0x6e, 0xe1, 0xad, 0xd0, 0x12, 0xea, 0x87, 0x1e,
	0x47, 0xb6, 0x98, 0xbb, 0xb0, 0x70, 0x69, 0x7e, 0x3a, 0x74, 0xc3, 0x87, 0x86, 0x61, 0xd0, 0x9a,
	0x9d, 0x4b, 0x67, 0xdf, 0xcc, 0xa5, 0x32, 0x97, 0xb2, 0x8b, 0x69, 0x9c, 0xbb, 0x20, 0xcc, 0x64,
	0xd2, 0xd3, 0xa1, 0x3f, 0x1e, 0xf8, 0xd1, 0xf3, 0x10, 0x6e, 0x03, 0x48, 0xbf, 0x3d, 0x93, 0x5d,
	0x0c, 0xfd, 0xf9, 0xc0, 0xcf, 0x3f, 0xec, 0xb4, 0xee, 0xc3, 0x9c, 0xe5, 0x0a, 0xba, 0xcf, 0x40,
	0xaf, 0xa7, 0x37, 0xa0, 0x33, 0x2d, 0xee, 0xb6, 0x6b, 0xfb, 0x91, 0x17, 0x8e, 0x06, 0x51, 0x85,
	0xcd, 0xe9, 0xc2, 0x2b, 0xe8, 0xe0, 0x17, 0x42, 0xe4, 0x60, 0xd1, 0xb5, 0x87, 0x8f, 0xbe, 0xea,
	0x88, 0xb2, 0xcf, 0x36, 0x3e, 0x20, 0xe3, 0xf6, 0x7b, 0xd2, 0xbe, 0x98, 0x09, 0x86, 0x43, 0xf7,
	0x18, 0xe8, 0xf5, 0x94, 0x5c, 0x8f, 0x07, 0xed, 0x0a, 0xbf, 0xc7, 0x83, 0xb6, 0x95, 0x9b, 0x7d,
	0xcf, 0xf6, 0xe0, 0x80, 0x1e, 0x11, 0x39, 0x58, 0x64, 0x7a, 0xf0, 0x1c, 0x77, 0x98, 0x07, 0xe8,
	0x57, 0x06, 0x7a, 0x5a, 0xae, 0x07, 0x1a, 0xf1, 0x3c, 0x21, 0x5a, 0x0b, 0x74, 0x84, 0x3d, 0x0a,
	0x42, 0x15, 0x76, 0x59, 0x17, 0x92, 0x68, 0xf8, 0x88, 0x92, 0x1b, 0x39, 0x0a, 0x60, 0x39, 0x81,
	0x0e, 0x73, 0x22, 0xa9, 0xe8, 0xc2, 0x2c, 0x1a, 0x81, 0x70, 0xaa, 0x24, 0x57, 0x96, 0xa2, 0xf3,
	0x44, 0xa3, 0x44, 0x5d, 0x2b, 0xe6, 0x49, 0x54, 0xb8, 0x38, 0x13, 0x9d, 0x96, 0xf3, 0xbc, 0x7f,
	0x22, 0x36, 0x11, 0x9b, 0xe4, 0x18, 0x86, 0x0f, 0x89, 0x8a, 0x52, 0x2a, 0xe6, 0xcd, 0x47, 0x7b,
	0xfc, 0x43, 0x2a, 0x4b, 0x09, 0xcf, 0xcc, 0x3b, 0x23, 0x6d, 0x7e, 0x23, 0x5e, 0x6b, 0xe2, 0xde,
	0x0f, 0x98, 0x90, 0xa9, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x63, 0x7c, 0xcd, 0x6f, 0x72, 0x0c,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MeshManagerClient is the client API for MeshManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MeshManagerClient interface {
	CreateMeshCluster(ctx context.Context, in *CreateMeshClusterReq, opts ...grpc.CallOption) (*CreateMeshClusterResp, error)
	DeleteMeshCluster(ctx context.Context, in *DeleteMeshClusterReq, opts ...grpc.CallOption) (*DeleteMeshClusterResp, error)
	ListMeshCluster(ctx context.Context, in *ListMeshClusterReq, opts ...grpc.CallOption) (*ListMeshClusterResp, error)
}

type meshManagerClient struct {
	cc *grpc.ClientConn
}

func NewMeshManagerClient(cc *grpc.ClientConn) MeshManagerClient {
	return &meshManagerClient{cc}
}

func (c *meshManagerClient) CreateMeshCluster(ctx context.Context, in *CreateMeshClusterReq, opts ...grpc.CallOption) (*CreateMeshClusterResp, error) {
	out := new(CreateMeshClusterResp)
	err := c.cc.Invoke(ctx, "/meshmanagerv1.MeshManager/CreateMeshCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meshManagerClient) DeleteMeshCluster(ctx context.Context, in *DeleteMeshClusterReq, opts ...grpc.CallOption) (*DeleteMeshClusterResp, error) {
	out := new(DeleteMeshClusterResp)
	err := c.cc.Invoke(ctx, "/meshmanagerv1.MeshManager/DeleteMeshCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *meshManagerClient) ListMeshCluster(ctx context.Context, in *ListMeshClusterReq, opts ...grpc.CallOption) (*ListMeshClusterResp, error) {
	out := new(ListMeshClusterResp)
	err := c.cc.Invoke(ctx, "/meshmanagerv1.MeshManager/ListMeshCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MeshManagerServer is the server API for MeshManager service.
type MeshManagerServer interface {
	CreateMeshCluster(context.Context, *CreateMeshClusterReq) (*CreateMeshClusterResp, error)
	DeleteMeshCluster(context.Context, *DeleteMeshClusterReq) (*DeleteMeshClusterResp, error)
	ListMeshCluster(context.Context, *ListMeshClusterReq) (*ListMeshClusterResp, error)
}

// UnimplementedMeshManagerServer can be embedded to have forward compatible implementations.
type UnimplementedMeshManagerServer struct {
}

func (*UnimplementedMeshManagerServer) CreateMeshCluster(ctx context.Context, req *CreateMeshClusterReq) (*CreateMeshClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMeshCluster not implemented")
}
func (*UnimplementedMeshManagerServer) DeleteMeshCluster(ctx context.Context, req *DeleteMeshClusterReq) (*DeleteMeshClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMeshCluster not implemented")
}
func (*UnimplementedMeshManagerServer) ListMeshCluster(ctx context.Context, req *ListMeshClusterReq) (*ListMeshClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMeshCluster not implemented")
}

func RegisterMeshManagerServer(s *grpc.Server, srv MeshManagerServer) {
	s.RegisterService(&_MeshManager_serviceDesc, srv)
}

func _MeshManager_CreateMeshCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMeshClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeshManagerServer).CreateMeshCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meshmanagerv1.MeshManager/CreateMeshCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeshManagerServer).CreateMeshCluster(ctx, req.(*CreateMeshClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeshManager_DeleteMeshCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMeshClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeshManagerServer).DeleteMeshCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meshmanagerv1.MeshManager/DeleteMeshCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeshManagerServer).DeleteMeshCluster(ctx, req.(*DeleteMeshClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MeshManager_ListMeshCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMeshClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeshManagerServer).ListMeshCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meshmanagerv1.MeshManager/ListMeshCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeshManagerServer).ListMeshCluster(ctx, req.(*ListMeshClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _MeshManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "meshmanagerv1.MeshManager",
	HandlerType: (*MeshManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMeshCluster",
			Handler:    _MeshManager_CreateMeshCluster_Handler,
		},
		{
			MethodName: "DeleteMeshCluster",
			Handler:    _MeshManager_DeleteMeshCluster_Handler,
		},
		{
			MethodName: "ListMeshCluster",
			Handler:    _MeshManager_ListMeshCluster_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/meshmanagerv1/meshmanager.proto",
}
