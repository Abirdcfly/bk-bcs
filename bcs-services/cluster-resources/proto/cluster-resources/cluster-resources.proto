// Tencent is pleased to support the open source community by making Blueking Container Service available.
// Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.
// Licensed under the MIT License (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// http://opensource.org/licenses/MIT
//
// Unless required by applicable law or agreed to in writing, software distributed under,
// the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
// either express or implied. See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package clusterresources;

option go_package = "proto/cluster-resources";

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "validate/validate.proto";

// swagger 相关定义
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "Cluster Resources ApiDoc"
		version: "1.0"
		license: {
			name: "MIT";
		};
	};
	schemes: HTTP
};

service ClusterResources {
	// 基础类接口
	rpc Echo(EchoReq) returns (EchoResp) {
		option (google.api.http) = {
			post: "/clusterresources/v1/echo"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Echo 接口，用于开发测试"
			summary: "Echo API"
		};
	}

	rpc Ping(PingReq) returns (PingResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/ping"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Ping 接口，用于检查服务是否存活"
			summary: "Ping API"
		};
	}

	rpc Healthz(HealthzReq) returns (HealthzResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/healthz"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Healthz 接口，用于检查服务健康状态"
			summary: "Healthz API"
		};
	}

	// 工作负载类接口
	rpc ListWorkloadDeploy(NamespaceScopedResListReq) returns (CommonResp) {
		option (google.api.http) = {
			get: "/clusterresources/v1/projects/{projectID}/clusters/{clusterID}/namespaces/{namespace}/workloads/deployments"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取集群工作负载(Deploy)"
			summary: "ListWorkloadDeploy API"
		};
	}

}

// 基础类请求/响应体
message EchoReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "EchoReq", description: "Echo API 请求"}
	};
	string str = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
			title: "Str", description: "待回显字符串，长度在 2-30 之间，仅包含大小写字母及数字"
		}, (validate.rules).string = {min_len: 2, max_len: 30, pattern: "^[0-9a-zA-Z-]+$"}];
}

message EchoResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "EchoResp", description: "Echo API 响应"}
	};
	string ret = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "Ret", description: "回显字符串"
	}];
}

message PingReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "PingReq", description: "Ping API 请求（无需参数）"}
	};
}

message PingResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "PingResp", description: "Ping API 响应"}
	};
	string ret = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "Ret", description: "Pong"
	}];
}

message HealthzReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "HealthzReq", description: "Healthz API 请求（无需参数）"}
	};
}

message HealthzResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "HealthzResp", description: "Ping API 响应"}
	};
	// TODO 暂时只返回 OK 的状态，后续需要补充 API，DB 等状态信息
	string status = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "Status", description: "服务状态"
	}];
}

message NamespaceScopedResListReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "NamespaceScopedResListReq", description: "命名空间维度 k8s 资源查询请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {max_len: 14}];
	string namespace = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "命名空间"
	}, (validate.rules).string = {max_len: 63, pattern: "^[0-9a-zA-Z-]+$"}];
	string labelSelector = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "标签选择器"
	}, (validate.rules).string = {max_len: 128}];
	string ownerName = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "所属资源名称"
	}, (validate.rules).string = {max_len: 256}];
	string ownerKind = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "所属资源类型"
	}, (validate.rules).string = {max_len: 64}];
}

message ClusterScopedResListReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {title: "ClusterScopedResListReq", description: "集群维度 k8s 资源查询请求体"}
	};
	string projectID = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "项目 ID"
	}, (validate.rules).string = {pattern: "^[0-9a-f]{32}$"}];
	string clusterID = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "集群 ID"
	}, (validate.rules).string = {max_len: 14}];
}

message CommonResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "CommonResp"
			description: "通用响应体，适用于资源型 API 请求返回，如需定义详细的 data 结构则不使用该响应体"
		}
	};

	uint32 code = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "code", description: "返回错误码"
	}];
	string message = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "message", description : "返回错误信息"
	}];
	string requestID = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "request id", description : "请求 ID"
	}];
	google.protobuf.Struct data = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
		title: "data", description : "资源信息"
	}];
}
